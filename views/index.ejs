<!DOCTYPE html>
<html ng-app="app">

<head>
  <title>ElvisStore</title>
  <link rel="stylesheet" href="/css/bootstrap.min.css" />
  <script src="/js/angular.min.js"></script>
  <script src="/js/app.js"></script>
  <script src="/js/searchController.js"></script>
  <script>
    (function (i, s, o, g, r, a, m) {
      i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
        (i[r].q = i[r].q || []).push(arguments)
      }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-100875694-1', 'auto');
    ga('send', 'pageview');
  </script>
  <script>
    (function (w, d, s, g, js, fjs) {
      g = w.gapi || (w.gapi = {}); g.analytics = { q: [], ready: function (cb) { this.q.push(cb) } };
      js = d.createElement(s); fjs = d.getElementsByTagName(s)[0];
      js.src = 'https://apis.google.com/js/platform.js';
      fjs.parentNode.insertBefore(js, fjs); js.onload = function () { g.load('analytics') };
    }(window, document, 'script'));

  </script>
  <script>
    gapi.analytics.ready(function () {

      /**
       * Authorize the user immediately if the user has already granted access.
       * If no access has been created, render an authorize button inside the
       * element with the ID "embed-api-auth-container".
       */
      gapi.analytics.auth.authorize({
        serverAuth: {
          access_token: '<%= gtoken %>'
        }
      });


      /**
       * Create a new ViewSelector instance to be rendered inside of an
       * element with the id "view-selector-container".
       */
      // var viewSelector = new gapi.analytics.ViewSelector({
      //   container: 'view-selector-container'
      // });

      // // Render the view selector to the page.
      // viewSelector.execute();


      /**
       * Create a new DataChart instance with the given query parameters
       * and Google chart options. It will be rendered inside an element
       * with the id "chart-container".
       */
      var dataChart = new gapi.analytics.googleCharts.DataChart({
        query: {
          ids: "ga:152709355", // <-- Replace with the ids value for your view.
          metrics: 'ga:sessions',
          dimensions: 'ga:date',
          'start-date': '30daysAgo',
          'end-date': 'yesterday'
        },
        chart: {
          container: 'chart-container',
          type: 'LINE',
          options: {
            width: '100%'
          }
        }
      });
      dataChart.execute();


      // /**
      //  * Render the dataChart on the page whenever a new view is selected.
      //  */
      // viewSelector.on('change', function (ids) {
      //   dataChart.set({ query: { ids: ids } }).execute();
      // });

    });
  </script>
</head>

<body>
  
  <div class="head text-center">
    <!--<img src="http://clipart-library.com/data_images/250409.jpg" width="200" alt="Elvis Store" />
        <br />-->

    <h2>Elvis products</h2>
    <br />
  </div>
  <div class="col-md-offset-3 col-md-6" ng-controller="searchController as ctrl" ng-init="init('<%= host+'/api'%>')">

    <div class="form-group form-inline">
      <label for="filt">Product filter</label>
      <input id="filt" class="form-control" ng-model-options="{ debounce: 500 }" ng-model="filter" ng-change="onFilter()" placeholder="Type something! " />
    </div>
    <table class="table table-striped table-bordered">
      <thead>
        <tr class="info">
          <th>Name</th>
          <th> Price</th>
        </tr>
      </thead>
      <tbody>
        <tr ng-repeat="p in products track by p._id">
          <td>{{p.name}}</td>
          <td>{{p.cost | currency:"$"}}</td>
        </tr>
      </tbody>
    </table>

  </div>
  <div id="embed-api-auth-container"></div>
  <div id="chart-container" class="col-md-12"></div>
  <div id="view-selector-container"></div>

</body>

</html>